
allprojects {
    group = 'it.goodtimes14'
    version = '2.2.0'

    apply plugin: 'java'
    compileJava.options.encoding = 'UTF-8'
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

subprojects {
    apply plugin: 'java'
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven { url "https://repo.codemc.io/repository/nms/" }
        maven {
            name 'sonatype'
            url 'https://oss.sonatype.org/content/groups/public/'
        }
        maven {
            name 'velocity'
            url 'https://repo.velocitypowered.com/snapshots/'
        }
    }
    dependencies {
        compileOnly 'com.zaxxer:HikariCP:4.0.3'
        compileOnly 'org.mongodb:mongo-java-driver:3.12.7'
        compileOnly 'org.projectlombok:lombok:1.18.12'
        compileOnly 'com.h2database:h2:2.1.210'
        annotationProcessor 'org.projectlombok:lombok:1.18.12'
        compileOnly 'com.velocitypowered:velocity-api:1.1.4'
        annotationProcessor 'com.velocitypowered:velocity-api:1.1.4'
    }
}

task allJar(type: Jar, dependsOn: subprojects.assemble) {
    baseName = 'GodsEyeSync'
    subprojects.each { subproject ->
        File file = new File(subproject.getBuildDir().getPath() + "/libs/")
        boolean dumb = file.listFiles().any {
            it.getName().endsWith(".jarinjar")
        }
        from file.listFiles().collect {
            if(it.getName().endsWith(".jar")) {
                if(!dumb) {
                    zipTree(it)
                }
            } else {
                fileTree(it)
            }
        }
    }
}

artifacts {
    archives allJar
}


tasks.withType(Jar) {
    eachFile {
        it.duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
}